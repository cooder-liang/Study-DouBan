{"remainingRequest":"/Users/honor/HbuilderX_Code/study-douban/node_modules/_babel-loader@8.1.0@babel-loader/lib/index.js!/Users/honor/HbuilderX_Code/study-douban/src/store/modules/user.js","dependencies":[{"path":"/Users/honor/HbuilderX_Code/study-douban/src/store/modules/user.js","mtime":1585217544681},{"path":"/Users/honor/HbuilderX_Code/study-douban/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/honor/HbuilderX_Code/study-douban/node_modules/_babel-loader@8.1.0@babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport request from 'superagent';\nvar state = {\n  login_email: '',\n  login_name: '',\n  login_token: '',\n  temp_email: '',\n  temp_token: '',\n  temp_name: ''\n};\nvar getters = {\n  //filtering currentUser\n  currentUser: function currentUser(state) {\n    return {\n      email: state.login_email,\n      name: state.login_name,\n      token: state.login_token\n    };\n  }\n};\nvar mutations = {\n  updateData: function updateData(state, payload) {\n    switch (payload.name) {\n      case 'email':\n        state.temp_email = payload.value;\n        break;\n\n      case 'token':\n        state.temp_token = payload.value;\n        break;\n\n      case 'name':\n        state.temp_name = payload.name;\n        break;\n\n      default:\n        console.log('Error:Dont directly mutate Vuex store');\n        break;\n    }\n  },\n  getLocalUser: function getLocalUser(state) {\n    state.login_email = localStorage.getItem(\"email\");\n    state.login_token = localStorage.getItem(\"token\");\n    state.login_name = localStorage.getItem('name');\n  },\n  setUser: function setUser(state, payload) {\n    state.login_email = payload.login_email;\n    state.login_name = payload.login_name;\n    state.login_token = payload.login_token;\n  },\n  loginOut: function loginOut(state) {\n    localStorage.removeItem('name');\n    localStorage.removeItem('token');\n    localStorage.removeItem('email');\n    state.login_email = '';\n    state.login_name = '';\n    state.login_token = '';\n  }\n};\nvar actions = {\n  /**\r\n   * Login\r\n   * new Promise((resolve, reject) => {})\r\n   * Authorization: 'Bearer ' + token\r\n   * email: payload.email\r\n   * pass: payload.pass\r\n   * name: payload.name\r\n   */\n  login: function login(_ref, payload) {\n    var commit = _ref.commit;\n    return new Promise(function (resove, reject) {\n      request.get('https://douban.herokuapp.com/user/' + payload.email).set('Authorization', 'Bearer ' + payload.token).then(function (res) {\n        commit({\n          type: 'setUser',\n          email: res.body.email,\n          name: res.body.name,\n          token: res.body.token\n        });\n        resove(res);\n      }, function (err) {\n        reject(err);\n      });\n    });\n  },\n\n  /**\r\n   * Register\r\n   * new Promise((resolve, reject) => {})\r\n   * email: payload.email\r\n   * pass: payload.pass\r\n   * name: payload.name\r\n   */\n  register: function register(_ref2, payload) {\n    var commit = _ref2.commit;\n    return new Promise(function (resove, reject) {\n      request.post('https://douban.herokuapp.com/user/').send({\n        email: payload.email,\n        pass: payload.pass,\n        name: payload.name\n      }).then(function (res) {\n        localStorage.setItem('email', res.body.email);\n        localStorage.setItem('name', res.body.name);\n        localStorage.setItem('token', res.body.token);\n        commit({\n          type: 'setUser',\n          email: res.body.email,\n          name: res.body.name,\n          token: res.body.token\n        });\n        resove(res);\n      }, function (err) {\n        reject(err);\n      });\n    });\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};",{"version":3,"sources":["/Users/honor/HbuilderX_Code/study-douban/src/store/modules/user.js"],"names":["request","state","login_email","login_name","login_token","temp_email","temp_token","temp_name","getters","currentUser","email","name","token","mutations","updateData","payload","value","console","log","getLocalUser","localStorage","getItem","setUser","loginOut","removeItem","actions","login","commit","Promise","resove","reject","get","set","then","res","type","body","err","register","post","send","pass","setItem"],"mappings":"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","sourcesContent":["import request from 'superagent'\r\n\r\nconst state = {\r\n\tlogin_email: '',\r\n\tlogin_name: '',\r\n\tlogin_token: '',\r\n\ttemp_email: '',\r\n\ttemp_token: '',\r\n\ttemp_name: ''\r\n}\r\n\r\nconst getters = {\r\n\t//filtering currentUser\r\n\tcurrentUser: state => {\r\n\t\treturn {\r\n\t\t\temail: state.login_email,\r\n\t\t\tname: state.login_name,\r\n\t\t\ttoken: state.login_token\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst mutations = {\r\n\tupdateData(state, payload) {\r\n\t\tswitch (payload.name) {\r\n\t\t\tcase 'email':\r\n\t\t\t\tstate.temp_email = payload.value\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'token':\r\n\t\t\t\tstate.temp_token = payload.value\r\n\t\t\t\tbreak\r\n\t\t\tcase 'name':\r\n\t\t\t\tstate.temp_name = payload.name\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log('Error:Dont directly mutate Vuex store');\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t},\r\n\tgetLocalUser(state) {\r\n\t\tstate.login_email = localStorage.getItem(\"email\")\r\n\t\tstate.login_token = localStorage.getItem(\"token\")\r\n\t\tstate.login_name = localStorage.getItem('name')\r\n\t},\r\n\tsetUser(state, payload) {\r\n\t\tstate.login_email = payload.login_email\r\n\t\tstate.login_name = payload.login_name\r\n\t\tstate.login_token = payload.login_token\r\n\t},\r\n\tloginOut(state) {\r\n\t\tlocalStorage.removeItem('name')\r\n\t\tlocalStorage.removeItem('token')\r\n\t\tlocalStorage.removeItem('email')\r\n\t\tstate.login_email = ''\r\n\t\tstate.login_name = ''\r\n\t\tstate.login_token = ''\r\n\t}\r\n}\r\n\r\nconst actions = {\r\n\t/**\r\n\t * Login\r\n\t * new Promise((resolve, reject) => {})\r\n\t * Authorization: 'Bearer ' + token\r\n\t * email: payload.email\r\n\t * pass: payload.pass\r\n\t * name: payload.name\r\n\t */\r\n\tlogin({\r\n\t\tcommit\r\n\t}, payload) {\r\n\t\treturn new Promise(((resove, reject) => {\r\n\t\t\trequest\r\n\t\t\t\t.get('https://douban.herokuapp.com/user/' + payload.email)\r\n\t\t\t\t.set('Authorization', 'Bearer ' + payload.token)\r\n\t\t\t\t.then(res => {\r\n\t\t\t\t\tcommit({\r\n\t\t\t\t\t\ttype: 'setUser',\r\n\t\t\t\t\t\temail: res.body.email,\r\n\t\t\t\t\t\tname: res.body.name,\r\n\t\t\t\t\t\ttoken: res.body.token\r\n\t\t\t\t\t})\r\n\t\t\t\t\tresove(res)\r\n\t\t\t\t}, err => {\r\n\t\t\t\t\treject(err)\r\n\t\t\t\t})\r\n\t\t}))\r\n\t},\r\n\t/**\r\n\t * Register\r\n\t * new Promise((resolve, reject) => {})\r\n\t * email: payload.email\r\n\t * pass: payload.pass\r\n\t * name: payload.name\r\n\t */\r\n\tregister({\r\n\t\tcommit\r\n\t}, payload) {\r\n\t\treturn new Promise((resove, reject) => {\r\n\t\t\trequest\r\n\t\t\t\t.post('https://douban.herokuapp.com/user/')\r\n\t\t\t\t.send({\r\n\t\t\t\t\temail: payload.email,\r\n\t\t\t\t\tpass: payload.pass,\r\n\t\t\t\t\tname: payload.name\r\n\t\t\t\t})\r\n\t\t\t\t.then(res => {\r\n\t\t\t\t\tlocalStorage.setItem('email', res.body.email)\r\n\t\t\t\t\tlocalStorage.setItem('name', res.body.name)\r\n\t\t\t\t\tlocalStorage.setItem('token', res.body.token)\r\n\t\t\t\t\tcommit({\r\n\t\t\t\t\t\ttype: 'setUser',\r\n\t\t\t\t\t\temail: res.body.email,\r\n\t\t\t\t\t\tname: res.body.name,\r\n\t\t\t\t\t\ttoken: res.body.token\r\n\t\t\t\t\t})\r\n\t\t\t\t\tresove(res)\r\n\t\t\t\t}, err => {\r\n\t\t\t\t\treject(err)\r\n\t\t\t\t})\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport default {\r\n\tstate,\r\n\tgetters,\r\n\tmutations,\r\n\tactions\r\n}\n"]}]}